// MainWindow.xaml
<Window x:Class="WpfTodo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="WPF Todo App" Height="300" Width="400"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <!-- スタイル定義 -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.8"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="LightBlue">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <!-- 入力エリア -->
        <TextBox x:Name="TextBoxInput" 
                 Grid.Row="0" Grid.Column="0"
                 Margin="20,20,10,10" 
                 Height="25"
                 VerticalContentAlignment="Center"
                 KeyDown="TextBoxInput_KeyDown">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="Text" Value="やることを入力してね！"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Text" Value=""/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <!-- ボタンエリア -->
        <StackPanel Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" 
                    Orientation="Vertical" Margin="0,20,20,10">
            <Button x:Name="ButtonAdd" 
                    Content="追加" 
                    Background="Pink"
                    Style="{StaticResource ButtonStyle}"
                    Click="ButtonAdd_Click"/>
            <Button x:Name="ButtonRemove" 
                    Content="削除" 
                    Background="LightCoral"
                    Style="{StaticResource ButtonStyle}"
                    Click="ButtonRemove_Click"/>
        </StackPanel>

        <!-- リストエリア -->
        <ListBox x:Name="ListBoxTodos" 
                 Grid.Row="2" Grid.ColumnSpan="2"
                 Margin="20,10,20,10"
                 Background="White"
                 SelectionMode="Single">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}" 
                               Padding="5"
                               FontSize="12"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- カウンターエリア -->
        <Label x:Name="LabelCounter" 
               Grid.Row="3" Grid.ColumnSpan="2"
               Content="総数: 0件"
               Margin="20,0,20,10"
               Foreground="DarkBlue"
               FontWeight="Bold"/>
    </Grid>
</Window>

// MainWindow.xaml.cs
using System;
using System.Collections.ObjectModel;
using System.Windows;
using System.Windows.Input;

namespace WpfTodo
{
    public partial class MainWindow : Window
    {
        private ObservableCollection<string> todoItems;
        private bool isPlaceholderActive = true;

        public MainWindow()
        {
            InitializeComponent();
            InitializeTodoList();
        }

        private void InitializeTodoList()
        {
            todoItems = new ObservableCollection<string>();
            ListBoxTodos.ItemsSource = todoItems;
            
            // プレースホルダーの処理
            TextBoxInput.GotFocus += (s, e) => {
                if (isPlaceholderActive)
                {
                    TextBoxInput.Text = "";
                    TextBoxInput.Foreground = System.Windows.Media.Brushes.Black;
                    isPlaceholderActive = false;
                }
            };

            TextBoxInput.LostFocus += (s, e) => {
                if (string.IsNullOrWhiteSpace(TextBoxInput.Text))
                {
                    TextBoxInput.Text = "やることを入力してね！";
                    TextBoxInput.Foreground = System.Windows.Media.Brushes.Gray;
                    isPlaceholderActive = true;
                }
            };
        }

        private void TextBoxInput_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Enter)
            {
                AddTodo();
            }
        }

        private void ButtonAdd_Click(object sender, RoutedEventArgs e)
        {
            AddTodo();
        }

        private void ButtonRemove_Click(object sender, RoutedEventArgs e)
        {
            if (ListBoxTodos.SelectedIndex >= 0)
            {
                todoItems.RemoveAt(ListBoxTodos.SelectedIndex);
                UpdateCounter();
            }
            else
            {
                MessageBox.Show("削除する項目を選んでね！", "お知らせ", 
                               MessageBoxButton.OK, MessageBoxImage.Information);
            }
        }

        private void AddTodo()
        {
            if (!isPlaceholderActive && !string.IsNullOrWhiteSpace(TextBoxInput.Text))
            {
                string newTodo = $"{DateTime.Now:HH:mm} - {TextBoxInput.Text}";
                todoItems.Add(newTodo);
                
                TextBoxInput.Text = "やることを入力してね！";
                TextBoxInput.Foreground = System.Windows.Media.Brushes.Gray;
                isPlaceholderActive = true;
                
                UpdateCounter();
            }
            else
            {
                MessageBox.Show("なんか入力してよ～！", "エラー", 
                               MessageBoxButton.OK, MessageBoxImage.Warning);
            }
        }

        private void UpdateCounter()
        {
            LabelCounter.Content = $"総数: {todoItems.Count}件";
        }
    }
}

// App.xaml
<Application x:Class="WpfTodo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
</Application>

// App.xaml.cs
using System.Windows;

namespace WpfTodo
{
    public partial class App : Application
    {
    }
}